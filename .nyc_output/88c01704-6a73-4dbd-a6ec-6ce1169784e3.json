{"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/server.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/server.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":66}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":51}},"7":{"start":{"line":10,"column":24},"end":{"line":10,"column":68}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}},"9":{"start":{"line":12,"column":12},"end":{"line":12,"column":36}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":26}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"15":{"start":{"line":18,"column":13},"end":{"line":18,"column":17}},"16":{"start":{"line":19,"column":0},"end":{"line":21,"column":3}},"17":{"start":{"line":20,"column":4},"end":{"line":20,"column":53}},"18":{"start":{"line":22,"column":0},"end":{"line":22,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":17},"end":{"line":19,"column":18}},"loc":{"start":{"line":19,"column":23},"end":{"line":21,"column":1}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"f":{"0":5,"1":1},"b":{"0":[1,1,1],"1":[2,3],"2":[5,5]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/server.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/server.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,mEAA0C;AAC1C,gDAAwB;AACxB,oDAA4B;AAC5B,qEAA4C;AAC5C,sCAAmC;AAEnC,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,EAAC,KAAY,CAAC,CAAC,CAAC;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,mBAAS,CAAC,CAAC;AAE3B,IAAA,uBAAY,EAAC,GAAG,CAAC,CAAC;AAElB,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IAClB,OAAO,CAAC,GAAG,CAAC,6BAA6B,IAAI,EAAE,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC;AAEH,kBAAe,GAAG,CAAC","sourcesContent":["import express from 'express';\nimport allRoutes from \"./routes/allRoutes\"\nimport cors from 'cors';\nimport dotenv from 'dotenv';\nimport swaggerSetup from '../swaggerConfig';\nimport './database/config/database'\n\nconst app = express();\napp.use(express.json());\napp.use(cors(\" * \" as any));\ndotenv.config();\n\napp.use(\"/api\", allRoutes);\n\nswaggerSetup(app);\n\nconst PORT = 7070;\napp.listen(PORT, () => {\n    console.log(`Server is running on port ${PORT}`);\n});\n\nexport default app;\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"33934c59047d45589b32f1772ac997c458a0054b"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/allRoutes.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/allRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":61}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":67}},"6":{"start":{"line":9,"column":27},"end":{"line":9,"column":73}},"7":{"start":{"line":10,"column":21},"end":{"line":10,"column":61}},"8":{"start":{"line":11,"column":15},"end":{"line":11,"column":41}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{"0":5},"b":{"0":[1,1,1],"1":[4,1],"2":[5,5]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/allRoutes.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/allRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAE9B,8DAAqC;AACrC,oEAA2C;AAC3C,0EAAiD;AACjD,8DAAqC;AAErC,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,oBAAS,CAAC,CAAC;AAChC,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,uBAAY,CAAC,CAAC;AACtC,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,0BAAe,CAAC,CAAC;AAC5C,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,oBAAS,CAAC,CAAC;AAGhC,kBAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\n\nimport userRoute from './userRoutes';\nimport messageRoute from './messageRoutes';\nimport subscriberRoute from './subscriberRoutes';\nimport blogRoute from './blogRoutes';\n\nconst router = express.Router();\n\nrouter.use(\"/users\", userRoute);\nrouter.use(\"/messages\", messageRoute);\nrouter.use(\"/subscribers\", subscriberRoute);\nrouter.use(\"/blogs\", blogRoute);\n\n\nexport default router;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a3ecd8469aa623ddc67d2c2fecbb7ad68ce4ab75"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/userRoutes.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/userRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":64}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":77}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":41}},"7":{"start":{"line":61,"column":0},"end":{"line":61,"column":48}},"8":{"start":{"line":112,"column":0},"end":{"line":112,"column":46}},"9":{"start":{"line":147,"column":0},"end":{"line":147,"column":86}},"10":{"start":{"line":190,"column":0},"end":{"line":190,"column":95}},"11":{"start":{"line":191,"column":0},"end":{"line":191,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/userRoutes.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/userRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,iEAA8D;AAC9D,8EAAgG;AAEhG,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkDG;AACH,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,uBAAM,CAAC,CAAC;AAE/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiDG;AACH,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,sBAAK,CAAC,CAAC;AAE7B;;;;;;;;GAQG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AAEH,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,+BAAc,EAAE,0BAAS,CAAC,CAAC;AAEpD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,+BAAc,EAAE,2BAAU,CAAC,CAAC;AAE7D,kBAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\nimport { authentication } from '../middleware/authentication';\nimport {login, signup, viewUsers, deleteUser}  from \"../modules/user/controller/userController\";\n\nconst router = express.Router();\n\n/**\n * @swagger\n * /users/signup:\n *   post:\n *     summary: Signup a new user\n *     requestBody:\n *       description: User data\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               username:\n *                 type: string\n *               email:\n *                 type: string\n *               password:\n *                 type: string\n *           example:\n *             username: \"saddock\"\n *             email: \"saddock@gmail.com\"\n *             password: \"Saddock_123\"\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: \"success\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     user:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         username:\n *                           type: string\n *                         email:\n *                           type: string\n *       404:\n *         description: Bad Request\n *       500:\n *         description: Internal Server Error\n */\nrouter.post(\"/signup\", signup);\n\n/**\n * @swagger\n * /users/login:\n *   post:\n *     summary: Login a user\n *     requestBody:\n *       description: User credentials\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               email:\n *                 type: string\n *               password:\n *                 type: string\n *           example:\n *             email: \"saddock@gmail.com\"\n *             password: \"Saddock_123\"\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: \"success\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     user:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         username:\n *                           type: string\n *                         email:\n *                           type: string\n *                     token:\n *                       type: string\n *       404:\n *         description: Bad Request\n *       500:\n *         description: Internal Server Error\n */\nrouter.post(\"/login\", login);\n\n/**\n * @swagger\n * components:\n *   securitySchemes:\n *     bearerAuth:\n *       type: apiKey\n *       name: authorization\n *       in: header\n */\n\n/**\n * @swagger\n * /users/viewusers:\n *   get:\n *     security:\n *       - bearerAuth: []\n *     summary: Get a list of all users\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"All users successfully found\"\n *                 data:\n *                   type: object\n *       404:\n *         description: User not found\n *       500:\n *         description: Internal Server Error\n */\n\nrouter.get(\"/viewusers\", authentication, viewUsers);\n\n/**\n * @swagger\n * /users/deleteUser/{id}:\n *   delete:\n *     summary: Delete a user by ID\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: User ID\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"User deleted successfully\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     deletedUser:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         username:\n *                           type: string\n *                         email:\n *                           type: string\n *       404:\n *         description: User not found\n *       500:\n *         description: Internal Server Error\n */\nrouter.delete(\"/deleteUser/:id\", authentication, deleteUser);\n\nexport default router;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a21dce519d8ba85451f87e7d622b9384c08c7a94"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/middleware/authentication.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/middleware/authentication.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":23},"end":{"line":23,"column":1}},"7":{"start":{"line":11,"column":23},"end":{"line":11,"column":51}},"8":{"start":{"line":12,"column":18},"end":{"line":12,"column":56}},"9":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":78}},"11":{"start":{"line":16,"column":4},"end":{"line":22,"column":7}},"12":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"13":{"start":{"line":18,"column":12},"end":{"line":18,"column":97}},"14":{"start":{"line":20,"column":8},"end":{"line":20,"column":36}},"15":{"start":{"line":21,"column":8},"end":{"line":21,"column":15}},"16":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":23},"end":{"line":9,"column":24}},"loc":{"start":{"line":9,"column":43},"end":{"line":23,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":50},"end":{"line":16,"column":51}},"loc":{"start":{"line":16,"column":68},"end":{"line":22,"column":5}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":47}},"type":"binary-expr","locations":[{"start":{"line":8,"column":16},"end":{"line":8,"column":35}},{"start":{"line":8,"column":39},"end":{"line":8,"column":47}}],"line":8},"4":{"loc":{"start":{"line":12,"column":18},"end":{"line":12,"column":56}},"type":"binary-expr","locations":[{"start":{"line":12,"column":18},"end":{"line":12,"column":28}},{"start":{"line":12,"column":32},"end":{"line":12,"column":56}}],"line":12},"5":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{"line":13,"column":4},"end":{"line":15,"column":5}}],"line":13},"6":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}],"line":17}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":3,"8":3,"9":3,"10":0,"11":3,"12":3,"13":0,"14":3,"15":3,"16":1},"f":{"0":1,"1":3,"2":3},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1],"4":[3,3],"5":[0,3],"6":[0,3]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/middleware/authentication.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/middleware/authentication.ts"],"names":[],"mappings":";;;;;;AAAA,gEAA+B;AAG/B,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,QAAQ,CAAC;AAEzC,MAAM,cAAc,GAAG,CAAC,GAAoB,EAAE,GAAqB,EAAE,IAA0B,EAAE,EAAE;IACtG,0BAA0B;IAC1B,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IAChD,MAAM,KAAK,GAAG,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAErD,IAAI,CAAC,KAAK,EAAE,CAAC;QACT,OAAO,GAAG,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,wBAAwB,EAAC,CAAC,CAAC;IACxE,CAAC;IAED,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE;QACxC,IAAI,GAAG,EAAE,CAAC;YACN,OAAO,GAAG,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,uCAAuC,EAAC,CAAC,CAAC;QACvF,CAAC;QACA,GAAW,CAAC,MAAM,GAAI,OAAe,CAAC,MAAM,CAAC;QAC9C,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAhBW,QAAA,cAAc,kBAgBzB","sourcesContent":["import jwt from 'jsonwebtoken';\nimport express from 'express';\n\nconst JWT_KEY = process.env.JWT_KEY || 'SECRET';\n\nexport const authentication = (req: express.Request, res: express.Response, next: express.NextFunction) => {\n    //console.log(req.headers)\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n\n    if (!token) {\n        return res.json({status: false, message: \"You are not logged in.\"});\n    }\n\n    jwt.verify(token, JWT_KEY, (err, decoded) => {\n        if (err) {\n            return res.json({status: false, message: \"You are not logged in. Invalid Token.\"});\n        }\n        (req as any).userId = (decoded as any).userId;\n        next();\n    });\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2738cd2a9669e1d9de50bd5617b90c4dc7ff684d"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/user/controller/userController.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/user/controller/userController.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":81}},"14":{"start":{"line":13,"column":18},"end":{"line":13,"column":45}},"15":{"start":{"line":14,"column":19},"end":{"line":14,"column":52}},"16":{"start":{"line":16,"column":14},"end":{"line":48,"column":2}},"17":{"start":{"line":16,"column":28},"end":{"line":48,"column":2}},"18":{"start":{"line":17,"column":4},"end":{"line":47,"column":5}},"19":{"start":{"line":18,"column":36},"end":{"line":18,"column":44}},"20":{"start":{"line":19,"column":21},"end":{"line":19,"column":64}},"21":{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},"22":{"start":{"line":21,"column":12},"end":{"line":24,"column":15}},"23":{"start":{"line":26,"column":32},"end":{"line":26,"column":93}},"24":{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},"25":{"start":{"line":28,"column":12},"end":{"line":31,"column":15}},"26":{"start":{"line":33,"column":22},"end":{"line":33,"column":60}},"27":{"start":{"line":34,"column":8},"end":{"line":40,"column":11}},"28":{"start":{"line":43,"column":8},"end":{"line":46,"column":11}},"29":{"start":{"line":49,"column":0},"end":{"line":49,"column":22}},"30":{"start":{"line":51,"column":15},"end":{"line":86,"column":2}},"31":{"start":{"line":51,"column":29},"end":{"line":86,"column":2}},"32":{"start":{"line":53,"column":4},"end":{"line":85,"column":5}},"33":{"start":{"line":54,"column":46},"end":{"line":54,"column":54}},"34":{"start":{"line":55,"column":8},"end":{"line":60,"column":9}},"35":{"start":{"line":56,"column":12},"end":{"line":59,"column":15}},"36":{"start":{"line":61,"column":29},"end":{"line":61,"column":72}},"37":{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},"38":{"start":{"line":64,"column":12},"end":{"line":67,"column":15}},"39":{"start":{"line":69,"column":31},"end":{"line":69,"column":77}},"40":{"start":{"line":70,"column":21},"end":{"line":74,"column":10}},"41":{"start":{"line":75,"column":8},"end":{"line":78,"column":11}},"42":{"start":{"line":81,"column":8},"end":{"line":84,"column":11}},"43":{"start":{"line":87,"column":0},"end":{"line":87,"column":24}},"44":{"start":{"line":89,"column":18},"end":{"line":108,"column":2}},"45":{"start":{"line":89,"column":32},"end":{"line":108,"column":2}},"46":{"start":{"line":90,"column":4},"end":{"line":107,"column":5}},"47":{"start":{"line":91,"column":25},"end":{"line":91,"column":60}},"48":{"start":{"line":92,"column":8},"end":{"line":96,"column":9}},"49":{"start":{"line":93,"column":12},"end":{"line":95,"column":15}},"50":{"start":{"line":97,"column":8},"end":{"line":100,"column":11}},"51":{"start":{"line":103,"column":8},"end":{"line":106,"column":11}},"52":{"start":{"line":109,"column":0},"end":{"line":109,"column":30}},"53":{"start":{"line":111,"column":19},"end":{"line":133,"column":2}},"54":{"start":{"line":111,"column":33},"end":{"line":133,"column":2}},"55":{"start":{"line":112,"column":4},"end":{"line":132,"column":5}},"56":{"start":{"line":113,"column":23},"end":{"line":113,"column":36}},"57":{"start":{"line":115,"column":29},"end":{"line":115,"column":70}},"58":{"start":{"line":116,"column":8},"end":{"line":120,"column":9}},"59":{"start":{"line":117,"column":12},"end":{"line":119,"column":15}},"60":{"start":{"line":121,"column":28},"end":{"line":121,"column":72}},"61":{"start":{"line":122,"column":8},"end":{"line":125,"column":11}},"62":{"start":{"line":128,"column":8},"end":{"line":131,"column":11}},"63":{"start":{"line":134,"column":0},"end":{"line":134,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":16,"column":14},"end":{"line":16,"column":15}},"loc":{"start":{"line":16,"column":28},"end":{"line":48,"column":2}},"line":16},"8":{"name":"(anonymous_8)","decl":{"start":{"line":16,"column":62},"end":{"line":16,"column":63}},"loc":{"start":{"line":16,"column":75},"end":{"line":48,"column":1}},"line":16},"9":{"name":"(anonymous_9)","decl":{"start":{"line":51,"column":15},"end":{"line":51,"column":16}},"loc":{"start":{"line":51,"column":29},"end":{"line":86,"column":2}},"line":51},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":63},"end":{"line":51,"column":64}},"loc":{"start":{"line":51,"column":76},"end":{"line":86,"column":1}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":89,"column":18},"end":{"line":89,"column":19}},"loc":{"start":{"line":89,"column":32},"end":{"line":108,"column":2}},"line":89},"12":{"name":"(anonymous_12)","decl":{"start":{"line":89,"column":66},"end":{"line":89,"column":67}},"loc":{"start":{"line":89,"column":79},"end":{"line":108,"column":1}},"line":89},"13":{"name":"(anonymous_13)","decl":{"start":{"line":111,"column":19},"end":{"line":111,"column":20}},"loc":{"start":{"line":111,"column":33},"end":{"line":133,"column":2}},"line":111},"14":{"name":"(anonymous_14)","decl":{"start":{"line":111,"column":67},"end":{"line":111,"column":68}},"loc":{"start":{"line":111,"column":80},"end":{"line":133,"column":1}},"line":111}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},{"start":{"line":20,"column":8},"end":{"line":25,"column":9}}],"line":20},"6":{"loc":{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},{"start":{"line":27,"column":8},"end":{"line":32,"column":9}}],"line":27},"7":{"loc":{"start":{"line":55,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":60,"column":9}},{"start":{"line":55,"column":8},"end":{"line":60,"column":9}}],"line":55},"8":{"loc":{"start":{"line":55,"column":12},"end":{"line":55,"column":44}},"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":21}},{"start":{"line":55,"column":25},"end":{"line":55,"column":31}},{"start":{"line":55,"column":35},"end":{"line":55,"column":44}}],"line":55},"9":{"loc":{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},{"start":{"line":63,"column":8},"end":{"line":68,"column":9}}],"line":63},"10":{"loc":{"start":{"line":92,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":96,"column":9}},{"start":{"line":92,"column":8},"end":{"line":96,"column":9}}],"line":92},"11":{"loc":{"start":{"line":92,"column":12},"end":{"line":92,"column":46}},"type":"binary-expr","locations":[{"start":{"line":92,"column":12},"end":{"line":92,"column":21}},{"start":{"line":92,"column":25},"end":{"line":92,"column":46}}],"line":92},"12":{"loc":{"start":{"line":116,"column":8},"end":{"line":120,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":120,"column":9}},{"start":{"line":116,"column":8},"end":{"line":120,"column":9}}],"line":116}},"s":{"0":1,"1":13,"2":0,"3":9,"4":13,"5":13,"6":0,"7":0,"8":0,"9":0,"10":22,"11":9,"12":1,"13":1,"14":1,"15":1,"16":1,"17":3,"18":3,"19":3,"20":3,"21":3,"22":1,"23":2,"24":2,"25":1,"26":1,"27":1,"28":0,"29":1,"30":1,"31":3,"32":3,"33":3,"34":3,"35":1,"36":2,"37":2,"38":1,"39":1,"40":1,"41":1,"42":0,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":0,"50":1,"51":0,"52":1,"53":1,"54":2,"55":2,"56":2,"57":2,"58":2,"59":1,"60":1,"61":1,"62":0,"63":1},"f":{"0":9,"1":13,"2":0,"3":9,"4":13,"5":0,"6":22,"7":3,"8":3,"9":3,"10":3,"11":1,"12":1,"13":2,"14":2},"b":{"0":[1,1,1],"1":[13,0],"2":[9,9],"3":[9,13],"4":[9,9],"5":[1,2],"6":[1,1],"7":[1,2],"8":[3,2,2],"9":[1,1],"10":[0,1],"11":[1,1],"12":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/user/controller/userController.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/user/controller/userController.ts"],"names":[],"mappings":"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","sourcesContent":["import express from 'express'\nimport { comparePassword, encryptPassword, generateToken } from '../../../helpers'\nimport { createUser, getAllUsers, getUserByEmail , getUserById, deleteUserById} from '../repository/userRepo'\n\n\n//Login\nexport const login = async (req: express.Request, res: express.Response) => {\n    try{\n        const { email, password } = req.body;\n        const user = await getUserByEmail(email)\n        if (!user) {\n            return res.status(404).json({\n                status: 'fail',\n                message: 'You are not the Admin'\n            });\n        }\n        const isPasswordMatch = await comparePassword(password, user.password);\n        if(!isPasswordMatch){\n            return res.status(404).json({\n                status: 'fail',\n                message: 'Wrong password'\n            });\n        }\n        const token = generateToken(user._id);\n          return res.status(200).json({\n            status: 'success',\n            data: {\n                user,\n                token\n            },\n        });\n    } catch(error: any) {\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error.message             \n        })\n    }\n}\n\n\n//signup\nexport const signup = async (req: express.Request, res: express.Response) => {\n    //console.log(\"hello my people\")\n    try {\n        const { username, email, password} = req.body;\n        if ( !username || !email || !password){\n            return res.status(404).json({\n                status: 'fail',\n                message: 'insert user credentials'\n            });\n        }\n        const existingUser = await getUserByEmail(email);\n        //console.log(existingUser)\n        if (existingUser) {\n            return res.status(404).json({\n                status: 'fail',\n                message: 'user already exists'\n            });\n        }\n        const hashedPassword = await encryptPassword(password);\n        const user = await createUser({\n            username,\n            email,\n            password: hashedPassword,\n        });\n        return res.status(200).json({\n            status: 'success',\n            data: user\n        });\n    } catch(error: any) {\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error.message             \n        })\n    }\n}\n\n\n//view all users\nexport const viewUsers = async (req: express.Request, res: express.Response) => {\n    try {\n        const allUsers = await getAllUsers()\n        if(! allUsers || allUsers.length === 0) {\n            return res.status(404).json({\n                message: \"Allusers were not found\"\n            })\n        }\n        return res.status(200).json({\n            message: \"All Users successfully found\",\n            data: allUsers\n        })\n    }\n    catch(error: any){\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error.message             \n        })\n    }\n}\n\n\n// delete users\nexport const deleteUser = async (req: express.Request, res: express.Response) => {\n    try {\n        const userId = req.params.id; \n        // Check if the user exists\n        const existingUser = await getUserById(userId);\n        if (!existingUser) {\n            return res.status(404).json({\n                message: \"User not found\"\n            });\n        }\n        const deletedUser = await deleteUserById(userId);\n        return res.status(200).json({\n            message: \"User deleted successfully\",\n            data: deletedUser\n        });\n    } \n    catch (error: any) {\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error.message\n        });\n    }\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"00e26a0b9444df48a07a358982861a66d24a8d60"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/helpers/index.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/helpers/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":83}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":26},"end":{"line":8,"column":54}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":136}},"7":{"start":{"line":9,"column":89},"end":{"line":9,"column":130}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":136}},"9":{"start":{"line":10,"column":89},"end":{"line":10,"column":130}},"10":{"start":{"line":11,"column":16},"end":{"line":11,"column":47}},"11":{"start":{"line":12,"column":22},"end":{"line":15,"column":1}},"12":{"start":{"line":13,"column":18},"end":{"line":13,"column":88}},"13":{"start":{"line":14,"column":4},"end":{"line":14,"column":17}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":75},"end":{"line":9,"column":76}},"loc":{"start":{"line":9,"column":87},"end":{"line":9,"column":132}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":75},"end":{"line":10,"column":76}},"loc":{"start":{"line":10,"column":87},"end":{"line":10,"column":132}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":12,"column":22},"end":{"line":12,"column":23}},"loc":{"start":{"line":12,"column":34},"end":{"line":15,"column":1}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":11,"column":16},"end":{"line":11,"column":47}},"type":"binary-expr","locations":[{"start":{"line":11,"column":16},"end":{"line":11,"column":35}},{"start":{"line":11,"column":39},"end":{"line":11,"column":47}}],"line":11}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":1,"1":1,"2":2,"3":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/helpers/index.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/helpers/index.ts"],"names":[],"mappings":";;;;;;AAAA,gEAA8B;AAC9B,uDAAqE;AAS7C,gGATf,iCAAe,OASe;AAAE,gGATf,iCAAe,OASe;AAPxD,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,QAAQ,CAAC;AAEhD,MAAM,aAAa,GAAG,CAAC,MAAW,EAAO,EAAE;IACvC,MAAM,KAAK,GAAG,sBAAG,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,EAAE,OAAO,EAAE,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;IAC9D,OAAO,KAAK,CAAC;AACjB,CAAC,CAAA;AAEQ,sCAAa","sourcesContent":["import jwt from 'jsonwebtoken'\nimport { encryptPassword, comparePassword } from './passwordhelpers';\n\nconst JWT_KEY = process.env.JWT_KEY || 'SECRET';\n\nconst generateToken = (userId: any): any => {\n    const token = jwt.sign({userId}, JWT_KEY, {expiresIn: '12h'});\n    return token;\n}\n\nexport { generateToken, encryptPassword, comparePassword }\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a9b6ef7b92f7d6d934f4fd881130aa578e3a98aa"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/helpers/passwordhelpers.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/helpers/passwordhelpers.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":59}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":51}},"17":{"start":{"line":17,"column":24},"end":{"line":19,"column":2}},"18":{"start":{"line":17,"column":38},"end":{"line":19,"column":2}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":53}},"20":{"start":{"line":20,"column":0},"end":{"line":20,"column":42}},"21":{"start":{"line":21,"column":24},"end":{"line":23,"column":2}},"22":{"start":{"line":21,"column":54},"end":{"line":23,"column":2}},"23":{"start":{"line":22,"column":4},"end":{"line":22,"column":68}},"24":{"start":{"line":24,"column":0},"end":{"line":24,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":24},"end":{"line":17,"column":25}},"loc":{"start":{"line":17,"column":38},"end":{"line":19,"column":2}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":17,"column":72},"end":{"line":17,"column":73}},"loc":{"start":{"line":17,"column":85},"end":{"line":19,"column":1}},"line":17},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":24},"end":{"line":21,"column":25}},"loc":{"start":{"line":21,"column":54},"end":{"line":23,"column":2}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":21,"column":88},"end":{"line":21,"column":89}},"loc":{"start":{"line":21,"column":101},"end":{"line":23,"column":1}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":3,"2":0,"3":3,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":6,"11":3,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":2,"23":2,"24":1},"f":{"0":3,"1":3,"2":0,"3":3,"4":3,"5":0,"6":6,"7":1,"8":1,"9":1,"10":2,"11":2},"b":{"0":[1,1,1],"1":[3,0],"2":[3,3],"3":[3,3],"4":[3,3],"5":[1,1,1],"6":[0,1],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/helpers/passwordhelpers.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/helpers/passwordhelpers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,oDAA4B;AAE5B,MAAM,eAAe,GAAG,CAAO,QAAgB,EAAE,EAAE;IAC/C,OAAO,MAAM,gBAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAC3C,CAAC,CAAA,CAAA;AAMQ,0CAAe;AAJxB,MAAM,eAAe,GAAG,CAAO,QAAgB,EAAE,cAAsB,EAAE,EAAE;IACvE,OAAO,MAAM,gBAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;AAC1D,CAAC,CAAA,CAAA;AAEyB,0CAAe","sourcesContent":["import bcrypt from 'bcrypt';\n\nconst encryptPassword = async (password: string) => {\n    return await bcrypt.hash(password, 10);\n}\n\nconst comparePassword = async (password: string, hashedPassword: string) => {\n    return await bcrypt.compare(password, hashedPassword);\n}\n\nexport { encryptPassword, comparePassword }\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6ab16706e6bb431905cc3ade22098fef7c752fb2"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/user/repository/userRepo.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/user/repository/userRepo.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":122}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":72}},"17":{"start":{"line":17,"column":19},"end":{"line":19,"column":2}},"18":{"start":{"line":17,"column":29},"end":{"line":19,"column":2}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":45}},"20":{"start":{"line":20,"column":0},"end":{"line":20,"column":32}},"21":{"start":{"line":21,"column":20},"end":{"line":23,"column":2}},"22":{"start":{"line":21,"column":26},"end":{"line":23,"column":2}},"23":{"start":{"line":22,"column":4},"end":{"line":22,"column":39}},"24":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}},"25":{"start":{"line":25,"column":20},"end":{"line":27,"column":2}},"26":{"start":{"line":25,"column":28},"end":{"line":27,"column":2}},"27":{"start":{"line":26,"column":4},"end":{"line":26,"column":53}},"28":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}},"29":{"start":{"line":29,"column":23},"end":{"line":31,"column":2}},"30":{"start":{"line":29,"column":34},"end":{"line":31,"column":2}},"31":{"start":{"line":30,"column":4},"end":{"line":30,"column":51}},"32":{"start":{"line":32,"column":0},"end":{"line":32,"column":40}},"33":{"start":{"line":33,"column":23},"end":{"line":35,"column":2}},"34":{"start":{"line":33,"column":31},"end":{"line":35,"column":2}},"35":{"start":{"line":34,"column":4},"end":{"line":34,"column":55}},"36":{"start":{"line":36,"column":0},"end":{"line":36,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":19},"end":{"line":17,"column":20}},"loc":{"start":{"line":17,"column":29},"end":{"line":19,"column":2}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":17,"column":63},"end":{"line":17,"column":64}},"loc":{"start":{"line":17,"column":76},"end":{"line":19,"column":1}},"line":17},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":20},"end":{"line":21,"column":21}},"loc":{"start":{"line":21,"column":26},"end":{"line":23,"column":2}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":21,"column":60},"end":{"line":21,"column":61}},"loc":{"start":{"line":21,"column":73},"end":{"line":23,"column":1}},"line":21},"12":{"name":"(anonymous_12)","decl":{"start":{"line":25,"column":20},"end":{"line":25,"column":21}},"loc":{"start":{"line":25,"column":28},"end":{"line":27,"column":2}},"line":25},"13":{"name":"(anonymous_13)","decl":{"start":{"line":25,"column":62},"end":{"line":25,"column":63}},"loc":{"start":{"line":25,"column":75},"end":{"line":27,"column":1}},"line":25},"14":{"name":"(anonymous_14)","decl":{"start":{"line":29,"column":23},"end":{"line":29,"column":24}},"loc":{"start":{"line":29,"column":34},"end":{"line":31,"column":2}},"line":29},"15":{"name":"(anonymous_15)","decl":{"start":{"line":29,"column":68},"end":{"line":29,"column":69}},"loc":{"start":{"line":29,"column":81},"end":{"line":31,"column":1}},"line":29},"16":{"name":"(anonymous_16)","decl":{"start":{"line":33,"column":23},"end":{"line":33,"column":24}},"loc":{"start":{"line":33,"column":31},"end":{"line":35,"column":2}},"line":33},"17":{"name":"(anonymous_17)","decl":{"start":{"line":33,"column":65},"end":{"line":33,"column":66}},"loc":{"start":{"line":33,"column":78},"end":{"line":35,"column":1}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":10,"2":9,"3":10,"4":10,"5":10,"6":0,"7":0,"8":0,"9":0,"10":20,"11":10,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":2,"27":2,"28":1,"29":1,"30":5,"31":5,"32":1,"33":1,"34":1,"35":1,"36":1},"f":{"0":10,"1":10,"2":9,"3":10,"4":10,"5":0,"6":20,"7":1,"8":1,"9":1,"10":1,"11":1,"12":2,"13":2,"14":5,"15":5,"16":1,"17":1},"b":{"0":[1,1,1],"1":[1,9],"2":[10,10],"3":[10,10],"4":[10,10],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/user/repository/userRepo.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/user/repository/userRepo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,yEAAgD;AAGhD,MAAM,UAAU,GAAG,CAAO,IAAS,EAAE,EAAE;IACnC,OAAO,MAAM,cAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnC,CAAC,CAAA,CAAA;AAkBQ,gCAAU;AAhBnB,MAAM,WAAW,GAAG,GAAS,EAAE;IAC3B,OAAO,MAAM,cAAI,CAAC,IAAI,EAAE,CAAA;AAC5B,CAAC,CAAA,CAAA;AAcoB,kCAAW;AAZhC,MAAM,WAAW,GAAG,CAAO,EAAU,EAAE,EAAE;IACrC,OAAO,MAAM,cAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;AACzC,CAAC,CAAA,CAAA;AAUiC,kCAAW;AAR7C,MAAM,cAAc,GAAG,CAAO,KAAa,EAAE,EAAE;IAC3C,OAAO,MAAM,cAAI,CAAC,OAAO,CAAC,EAAC,KAAK,EAAC,CAAC,CAAA;AACtC,CAAC,CAAA,CAAA;AAM8D,wCAAc;AAJ7E,MAAM,cAAc,GAAG,CAAO,EAAU,EAAE,EAAE;IACxC,OAAO,MAAM,cAAI,CAAC,SAAS,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;AAC3C,CAAC,CAAA,CAAA;AAE8C,wCAAc","sourcesContent":["import User from '../../../database/models/user'\n\n\nconst createUser = async (body: any) => {\n    return await User.create(body);\n}\n\nconst getAllUsers = async () => {\n    return await User.find()\n}\n\nconst getUserById = async (id: string) => {\n    return await User.findOne({_id: id});\n}\n\nconst getUserByEmail = async (email: string) => {\n    return await User.findOne({email})\n}\n\nconst deleteUserById = async (id: string) => {\n    return await User.deleteOne({_id: id});\n}\n\nexport { createUser, getAllUsers, getUserById, deleteUserById, getUserByEmail }"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5d4b7f7c037a2638481831dafa47165f65327113"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/messageRoutes.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/messageRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":28},"end":{"line":7,"column":86}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":41}},"6":{"start":{"line":60,"column":0},"end":{"line":60,"column":65}},"7":{"start":{"line":96,"column":0},"end":{"line":96,"column":62}},"8":{"start":{"line":139,"column":0},"end":{"line":139,"column":71}},"9":{"start":{"line":140,"column":0},"end":{"line":140,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/messageRoutes.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/messageRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAE9B,uFAA6G;AAE7G,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAGhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkDG;AACH,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,iCAAa,CAAC,CAAC;AAE7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AACH,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,gCAAY,CAAC,CAAC;AAE1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,MAAM,CAAC,MAAM,CAAC,oBAAoB,EAAE,iCAAa,CAAC,CAAC;AAGnD,kBAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\n\nimport { createMessage, viewMessages, deleteMessage } from '../modules/message/controller/messageController';\n\nconst router = express.Router();\n\n\n/**\n * @swagger\n * /messages/createMessage:\n *   post:\n *     summary: Create a new message\n *     requestBody:\n *       description: message data\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               name:\n *                 type: string\n *               email:\n *                 type: string\n *               message:\n *                 type: string\n *           example:\n *             name: \"saddock\"\n *             email: \"saddock@gmail.com\"\n *             message: \"Hello there!\"\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"Message Sent\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     newMessage:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         name:\n *                           type: string\n *                         email:\n *                           type: string\n *                         message:\n *                           type: string\n *       500:\n *         description: Internal Server Error\n */\nrouter.post(\"/createMessage\", createMessage);\n\n/**\n * @swagger\n * /messages/viewMessages:\n *   get:\n *     summary: Get a list of all messages\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"All Messages successfully found\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     allMessages:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         name:\n *                           type: string\n *                         email:\n *                           type: string\n *                         message:\n *                           type: string\n *       404:\n *         description: messages were not found\n *       500:\n *         description: Internal Server Error\n */\nrouter.get(\"/viewMessages\", viewMessages);\n\n/**\n * @swagger\n * /messages/deleteMessage/{id}:\n *   delete:\n *     summary: Delete a message by ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: message ID\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"Message deleted successfully\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     deletedMessage:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         name:\n *                           type: string\n *                         email:\n *                           type: string\n *                         message:\n *                           type: string\n *       404:\n *         description: Message not found\n *       500:\n *         description: Internal Server Error\n */\nrouter.delete(\"/deleteMessage/:id\", deleteMessage);\n\n\nexport default router;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"18fab9237ae7096d65555c21071cf304530abe3f"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/message/controller/messageController.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/message/controller/messageController.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":78}},"14":{"start":{"line":13,"column":22},"end":{"line":13,"column":58}},"15":{"start":{"line":15,"column":22},"end":{"line":31,"column":2}},"16":{"start":{"line":15,"column":36},"end":{"line":31,"column":2}},"17":{"start":{"line":17,"column":4},"end":{"line":30,"column":5}},"18":{"start":{"line":18,"column":41},"end":{"line":18,"column":49}},"19":{"start":{"line":19,"column":27},"end":{"line":19,"column":92}},"20":{"start":{"line":20,"column":8},"end":{"line":23,"column":11}},"21":{"start":{"line":26,"column":8},"end":{"line":29,"column":11}},"22":{"start":{"line":32,"column":0},"end":{"line":32,"column":38}},"23":{"start":{"line":34,"column":21},"end":{"line":53,"column":2}},"24":{"start":{"line":34,"column":35},"end":{"line":53,"column":2}},"25":{"start":{"line":35,"column":4},"end":{"line":52,"column":5}},"26":{"start":{"line":36,"column":28},"end":{"line":36,"column":69}},"27":{"start":{"line":37,"column":8},"end":{"line":41,"column":9}},"28":{"start":{"line":38,"column":12},"end":{"line":40,"column":15}},"29":{"start":{"line":42,"column":8},"end":{"line":45,"column":11}},"30":{"start":{"line":48,"column":8},"end":{"line":51,"column":11}},"31":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}},"32":{"start":{"line":56,"column":22},"end":{"line":78,"column":2}},"33":{"start":{"line":56,"column":36},"end":{"line":78,"column":2}},"34":{"start":{"line":57,"column":4},"end":{"line":77,"column":5}},"35":{"start":{"line":58,"column":26},"end":{"line":58,"column":39}},"36":{"start":{"line":59,"column":32},"end":{"line":59,"column":82}},"37":{"start":{"line":60,"column":8},"end":{"line":64,"column":9}},"38":{"start":{"line":61,"column":12},"end":{"line":63,"column":15}},"39":{"start":{"line":66,"column":31},"end":{"line":66,"column":84}},"40":{"start":{"line":67,"column":8},"end":{"line":70,"column":11}},"41":{"start":{"line":73,"column":8},"end":{"line":76,"column":11}},"42":{"start":{"line":79,"column":0},"end":{"line":79,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":15,"column":22},"end":{"line":15,"column":23}},"loc":{"start":{"line":15,"column":36},"end":{"line":31,"column":2}},"line":15},"8":{"name":"(anonymous_8)","decl":{"start":{"line":15,"column":70},"end":{"line":15,"column":71}},"loc":{"start":{"line":15,"column":83},"end":{"line":31,"column":1}},"line":15},"9":{"name":"(anonymous_9)","decl":{"start":{"line":34,"column":21},"end":{"line":34,"column":22}},"loc":{"start":{"line":34,"column":35},"end":{"line":53,"column":2}},"line":34},"10":{"name":"(anonymous_10)","decl":{"start":{"line":34,"column":69},"end":{"line":34,"column":70}},"loc":{"start":{"line":34,"column":82},"end":{"line":53,"column":1}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":56,"column":22},"end":{"line":56,"column":23}},"loc":{"start":{"line":56,"column":36},"end":{"line":78,"column":2}},"line":56},"12":{"name":"(anonymous_12)","decl":{"start":{"line":56,"column":70},"end":{"line":56,"column":71}},"loc":{"start":{"line":56,"column":83},"end":{"line":78,"column":1}},"line":56}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":37,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":41,"column":9}},{"start":{"line":37,"column":8},"end":{"line":41,"column":9}}],"line":37},"6":{"loc":{"start":{"line":37,"column":12},"end":{"line":37,"column":52}},"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":24}},{"start":{"line":37,"column":28},"end":{"line":37,"column":52}}],"line":37},"7":{"loc":{"start":{"line":60,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":64,"column":9}},{"start":{"line":60,"column":8},"end":{"line":64,"column":9}}],"line":60}},"s":{"0":1,"1":5,"2":0,"3":4,"4":5,"5":5,"6":0,"7":0,"8":0,"9":0,"10":9,"11":4,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":1,"30":0,"31":1,"32":1,"33":2,"34":2,"35":2,"36":2,"37":2,"38":1,"39":1,"40":1,"41":0,"42":1},"f":{"0":4,"1":5,"2":0,"3":4,"4":5,"5":0,"6":9,"7":1,"8":1,"9":1,"10":1,"11":2,"12":2},"b":{"0":[1,1,1],"1":[5,0],"2":[4,4],"3":[4,5],"4":[4,4],"5":[0,1],"6":[1,1],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/message/controller/messageController.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/message/controller/messageController.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,2DAA6G;AAG7G,UAAU;AACH,MAAM,aAAa,GAAG,CAAO,GAAoB,EAAE,GAAqB,EAAE,EAAE;IAC/E,sBAAsB;IACtB,IAAI,CAAC;QACD,MAAM,EAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAC,GAAG,GAAG,CAAC,IAAI,CAAA;QACnC,MAAM,UAAU,GAAG,MAAM,IAAA,4BAAc,EAAC,EAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAA;QAC/D,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACxB,OAAO,EAAE,cAAc;YACvB,IAAI,EAAE,UAAU;SACnB,CAAC,CAAA;IACV,CAAC;IAAC,OAAM,KAAU,EAAE,CAAC;QACjB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACxB,OAAO,EAAE,uBAAuB;YAChC,KAAK,EAAE,KAAK,CAAC,OAAO;SACvB,CAAC,CAAA;IACN,CAAC;AACL,CAAC,CAAA,CAAA;AAfY,QAAA,aAAa,iBAezB;AAGD,mBAAmB;AACZ,MAAM,YAAY,GAAG,CAAO,GAAoB,EAAE,GAAqB,EAAE,EAAE;IAC9E,IAAI,CAAC;QACD,MAAM,WAAW,GAAG,MAAM,IAAA,4BAAc,GAAE,CAAA;QAE1C,IAAG,CAAE,WAAW,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAC,CAAC;YAC1C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACxB,OAAO,EAAE,yBAAyB;aACrC,CAAC,CAAA;QACN,CAAC;QACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACxB,OAAO,EAAE,iCAAiC;YAC1C,IAAI,EAAE,WAAW;SACpB,CAAC,CAAA;IACN,CAAC;IACD,OAAM,KAAU,EAAC,CAAC;QACd,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACxB,OAAO,EAAE,uBAAuB;YAChC,KAAK,EAAE,KAAK,CAAC,OAAO;SACvB,CAAC,CAAA;IACN,CAAC;AACL,CAAC,CAAA,CAAA;AApBY,QAAA,YAAY,gBAoBxB;AAGD,gBAAgB;AACT,MAAM,aAAa,GAAG,CAAO,GAAoB,EAAE,GAAqB,EAAE,EAAE;IAC/E,IAAI,CAAC;QACD,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QAChC,MAAM,eAAe,GAAG,MAAM,IAAA,4BAAc,EAAC,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,eAAe,EAAE,CAAC;YACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACxB,OAAO,EAAE,mBAAmB;aAC/B,CAAC,CAAC;QACP,CAAC;QACD,qBAAqB;QACrB,MAAM,cAAc,GAAG,MAAM,IAAA,+BAAiB,EAAC,SAAS,CAAC,CAAC;QAC1D,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACxB,OAAO,EAAE,8BAA8B;YACvC,IAAI,EAAE,cAAc;SACvB,CAAC,CAAC;IACP,CAAC;IACD,OAAO,KAAU,EAAE,CAAC;QAChB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACxB,OAAO,EAAE,uBAAuB;YAChC,KAAK,EAAE,KAAK,CAAC,OAAO;SACvB,CAAC,CAAC;IACP,CAAC;AACL,CAAC,CAAA,CAAA;AAtBY,QAAA,aAAa,iBAsBzB","sourcesContent":["import express from 'express'\nimport { createMessages, getAllMessages, getMessageById, deleteMessageById } from '../repository/messageRepo'\n\n\n//messages\nexport const createMessage = async (req: express.Request, res: express.Response) => {\n    //console.log(\"hello\")\n    try {\n        const {name, email, message} = req.body\n            const newMessage = await createMessages({name, email, message})\n            return res.status(200).json({\n                message: \"Message Sent\",\n                data: newMessage\n            })\n    } catch(error: any) {\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error.message             \n        })\n    }\n}\n\n\n//view all messages\nexport const viewMessages = async (req: express.Request, res: express.Response) => {\n    try {\n        const allMessages = await getAllMessages()\n        \n        if(! allMessages || allMessages.length === 0){\n            return res.status(404).json({\n                message: \"messages were not found\"\n            })\n        }\n        return res.status(200).json({\n            message: \"All Messages successfully found\",\n            data: allMessages\n        })\n    }\n    catch(error: any){\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error.message             \n        })\n    }\n}\n\n\n//delete message\nexport const deleteMessage = async (req: express.Request, res: express.Response) => {\n    try {\n        const messageId = req.params.id;\n        const existingMessage = await getMessageById(messageId);\n        if (!existingMessage) {\n            return res.status(404).json({\n                message: \"Message not found\"\n            });\n        }\n        // Delete the message\n        const deletedMessage = await deleteMessageById(messageId);\n        return res.status(200).json({\n            message: \"Message deleted successfully\",\n            data: deletedMessage\n        });\n    } \n    catch (error: any) {\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error.message\n        });\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7b58ddfd319eb76df56b76e7feb217164ab94e06"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/message/repository/messageRepo.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/message/repository/messageRepo.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":110}},"16":{"start":{"line":16,"column":19},"end":{"line":16,"column":80}},"17":{"start":{"line":17,"column":23},"end":{"line":19,"column":2}},"18":{"start":{"line":17,"column":33},"end":{"line":19,"column":2}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":49}},"20":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"21":{"start":{"line":21,"column":23},"end":{"line":23,"column":2}},"22":{"start":{"line":21,"column":29},"end":{"line":23,"column":2}},"23":{"start":{"line":22,"column":4},"end":{"line":22,"column":43}},"24":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"25":{"start":{"line":25,"column":23},"end":{"line":27,"column":2}},"26":{"start":{"line":25,"column":31},"end":{"line":27,"column":2}},"27":{"start":{"line":26,"column":4},"end":{"line":26,"column":57}},"28":{"start":{"line":28,"column":0},"end":{"line":28,"column":40}},"29":{"start":{"line":29,"column":26},"end":{"line":31,"column":2}},"30":{"start":{"line":29,"column":34},"end":{"line":31,"column":2}},"31":{"start":{"line":30,"column":4},"end":{"line":30,"column":59}},"32":{"start":{"line":32,"column":0},"end":{"line":32,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":23},"end":{"line":17,"column":24}},"loc":{"start":{"line":17,"column":33},"end":{"line":19,"column":2}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":17,"column":67},"end":{"line":17,"column":68}},"loc":{"start":{"line":17,"column":80},"end":{"line":19,"column":1}},"line":17},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":23},"end":{"line":21,"column":24}},"loc":{"start":{"line":21,"column":29},"end":{"line":23,"column":2}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":21,"column":63},"end":{"line":21,"column":64}},"loc":{"start":{"line":21,"column":76},"end":{"line":23,"column":1}},"line":21},"12":{"name":"(anonymous_12)","decl":{"start":{"line":25,"column":23},"end":{"line":25,"column":24}},"loc":{"start":{"line":25,"column":31},"end":{"line":27,"column":2}},"line":25},"13":{"name":"(anonymous_13)","decl":{"start":{"line":25,"column":65},"end":{"line":25,"column":66}},"loc":{"start":{"line":25,"column":78},"end":{"line":27,"column":1}},"line":25},"14":{"name":"(anonymous_14)","decl":{"start":{"line":29,"column":26},"end":{"line":29,"column":27}},"loc":{"start":{"line":29,"column":34},"end":{"line":31,"column":2}},"line":29},"15":{"name":"(anonymous_15)","decl":{"start":{"line":29,"column":68},"end":{"line":29,"column":69}},"loc":{"start":{"line":29,"column":81},"end":{"line":31,"column":1}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":5,"2":4,"3":5,"4":5,"5":5,"6":0,"7":0,"8":0,"9":0,"10":10,"11":5,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":2,"27":2,"28":1,"29":1,"30":1,"31":1,"32":1},"f":{"0":5,"1":5,"2":4,"3":5,"4":5,"5":0,"6":10,"7":1,"8":1,"9":1,"10":1,"11":1,"12":2,"13":2,"14":1,"15":1},"b":{"0":[1,1,1],"1":[1,4],"2":[5,5],"3":[5,5],"4":[5,5],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/message/repository/messageRepo.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/message/repository/messageRepo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,iFAAuD;AAGvD,MAAM,cAAc,GAAG,CAAO,IAAS,EAAE,EAAE;IACvC,OAAO,MAAM,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC,CAAA,CAAA;AAcQ,wCAAc;AAZvB,MAAM,cAAc,GAAG,GAAS,EAAE;IAC9B,OAAO,MAAM,kBAAO,CAAC,IAAI,EAAE,CAAA;AAC/B,CAAC,CAAA,CAAA;AAUwB,wCAAc;AARvC,MAAM,cAAc,GAAG,CAAO,EAAU,EAAE,EAAE;IACxC,OAAO,MAAM,kBAAO,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;AAC5C,CAAC,CAAA,CAAA;AAMwC,wCAAc;AAJvD,MAAM,iBAAiB,GAAG,CAAO,EAAU,EAAE,EAAE;IAC3C,OAAO,MAAM,kBAAO,CAAC,SAAS,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;AAC9C,CAAC,CAAA,CAAA;AAEwD,8CAAiB","sourcesContent":["import Message from '../../../database/models/messages'\n\n\nconst createMessages = async (body: any) => {\n    return await Message.create(body);\n}\n\nconst getAllMessages = async () => {\n    return await Message.find()\n}\n\nconst getMessageById = async (id: string) => {\n    return await Message.findOne({_id: id});\n}\n\nconst deleteMessageById = async (id: string) => {\n    return await Message.deleteOne({_id: id});\n}\n\nexport { createMessages, getAllMessages, getMessageById, deleteMessageById }"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e5476c62c0b7564beb6e9b1e2ac8edd851adb1b1"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/subscriberRoutes.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/subscriberRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":31},"end":{"line":7,"column":95}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":41}},"6":{"start":{"line":50,"column":0},"end":{"line":50,"column":74}},"7":{"start":{"line":79,"column":0},"end":{"line":79,"column":71}},"8":{"start":{"line":110,"column":0},"end":{"line":110,"column":80}},"9":{"start":{"line":111,"column":0},"end":{"line":111,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/subscriberRoutes.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/subscriberRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,gGAA4H;AAE5H,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwCG;AACH,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,uCAAgB,CAAC,CAAC;AAEnD;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AACH,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,sCAAe,CAAC,CAAC;AAEhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AACH,MAAM,CAAC,MAAM,CAAC,uBAAuB,EAAE,uCAAgB,CAAC,CAAC;AAEzD,kBAAe,MAAM,CAAC","sourcesContent":["import express from \"express\";\nimport { createSubscriber, viewSubscribers, deleteSubscriber } from \"../modules/subscriber/controller/subscriberController\";\n\nconst router = express.Router();\n\n/**\n * @swagger\n * /subscribers/createSubscriber:\n *   post:\n *     summary: create a new subscriber\n *     requestBody:\n *       description: subscriber data\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               email:\n *                 type: string\n *           example:\n *             email: \"saddock@gmail.com\"\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"Subscription Sent\"\n *                 data:\n *                   type: object\n *                   properties:\n *                     newSubscriber:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         email:\n *                           type: string\n *       500:\n *         description: Internal Server Error\n */\nrouter.post(\"/createSubscriber\", createSubscriber);\n\n/**\n * @swagger\n * /subscribers/viewSubscribers:\n *   get:\n *     summary: Get a list of all subscribers\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 data:\n *                   type: object\n *                   properties:\n *                     allSubscribers:\n *                       type: object\n *                       properties:\n *                         _id:\n *                           type: string\n *                         email:\n *                           type: string\n *       404:\n *         description: Subscribers were not found\n *       500:\n *         description: Internal Server Error\n */\nrouter.get(\"/viewSubscribers\", viewSubscribers);\n\n/**\n * @swagger\n * /subscribers/deleteSubscriber/{id}:\n *   delete:\n *     summary: Delete a subscriber by ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: message ID\n *     responses:\n *       200:\n *         description: Success\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: \"Subscriber deleted successfully\"\n *                 data:\n *                   type: object\n *       404:\n *         description: Subscriber not found\n *       500:\n *         description: Internal Server Error\n */\nrouter.delete(\"/deleteSubscriber/:id\", deleteSubscriber);\n\nexport default router;\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ffc1d058dfb42f95da0d486ca76478683f6ed257"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/subscriber/controller/subscriberController.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/subscriber/controller/subscriberController.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":87}},"16":{"start":{"line":16,"column":25},"end":{"line":16,"column":64}},"17":{"start":{"line":17,"column":17},"end":{"line":17,"column":51}},"18":{"start":{"line":18,"column":21},"end":{"line":18,"column":59}},"19":{"start":{"line":19,"column":0},"end":{"line":19,"column":26}},"20":{"start":{"line":21,"column":20},"end":{"line":30,"column":2}},"21":{"start":{"line":31,"column":30},"end":{"line":45,"column":2}},"22":{"start":{"line":31,"column":41},"end":{"line":45,"column":2}},"23":{"start":{"line":32,"column":4},"end":{"line":44,"column":5}},"24":{"start":{"line":33,"column":28},"end":{"line":38,"column":9}},"25":{"start":{"line":39,"column":8},"end":{"line":39,"column":48}},"26":{"start":{"line":40,"column":8},"end":{"line":40,"column":60}},"27":{"start":{"line":43,"column":8},"end":{"line":43,"column":66}},"28":{"start":{"line":47,"column":25},"end":{"line":64,"column":2}},"29":{"start":{"line":47,"column":39},"end":{"line":64,"column":2}},"30":{"start":{"line":48,"column":4},"end":{"line":63,"column":5}},"31":{"start":{"line":49,"column":26},"end":{"line":49,"column":34}},"32":{"start":{"line":50,"column":30},"end":{"line":50,"column":86}},"33":{"start":{"line":52,"column":8},"end":{"line":52,"column":43}},"34":{"start":{"line":53,"column":8},"end":{"line":56,"column":11}},"35":{"start":{"line":59,"column":8},"end":{"line":62,"column":11}},"36":{"start":{"line":65,"column":0},"end":{"line":65,"column":44}},"37":{"start":{"line":67,"column":24},"end":{"line":86,"column":2}},"38":{"start":{"line":67,"column":38},"end":{"line":86,"column":2}},"39":{"start":{"line":68,"column":4},"end":{"line":85,"column":5}},"40":{"start":{"line":69,"column":31},"end":{"line":69,"column":78}},"41":{"start":{"line":70,"column":8},"end":{"line":74,"column":9}},"42":{"start":{"line":71,"column":12},"end":{"line":73,"column":15}},"43":{"start":{"line":75,"column":8},"end":{"line":78,"column":11}},"44":{"start":{"line":81,"column":8},"end":{"line":84,"column":11}},"45":{"start":{"line":87,"column":0},"end":{"line":87,"column":42}},"46":{"start":{"line":89,"column":25},"end":{"line":111,"column":2}},"47":{"start":{"line":89,"column":39},"end":{"line":111,"column":2}},"48":{"start":{"line":90,"column":4},"end":{"line":110,"column":5}},"49":{"start":{"line":91,"column":29},"end":{"line":91,"column":42}},"50":{"start":{"line":92,"column":35},"end":{"line":92,"column":94}},"51":{"start":{"line":93,"column":8},"end":{"line":97,"column":9}},"52":{"start":{"line":94,"column":12},"end":{"line":96,"column":15}},"53":{"start":{"line":99,"column":27},"end":{"line":99,"column":89}},"54":{"start":{"line":100,"column":8},"end":{"line":103,"column":11}},"55":{"start":{"line":106,"column":8},"end":{"line":109,"column":11}},"56":{"start":{"line":112,"column":0},"end":{"line":112,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":31,"column":30},"end":{"line":31,"column":31}},"loc":{"start":{"line":31,"column":41},"end":{"line":45,"column":2}},"line":31},"9":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":75},"end":{"line":31,"column":76}},"loc":{"start":{"line":31,"column":88},"end":{"line":45,"column":1}},"line":31},"10":{"name":"(anonymous_10)","decl":{"start":{"line":47,"column":25},"end":{"line":47,"column":26}},"loc":{"start":{"line":47,"column":39},"end":{"line":64,"column":2}},"line":47},"11":{"name":"(anonymous_11)","decl":{"start":{"line":47,"column":73},"end":{"line":47,"column":74}},"loc":{"start":{"line":47,"column":86},"end":{"line":64,"column":1}},"line":47},"12":{"name":"(anonymous_12)","decl":{"start":{"line":67,"column":24},"end":{"line":67,"column":25}},"loc":{"start":{"line":67,"column":38},"end":{"line":86,"column":2}},"line":67},"13":{"name":"(anonymous_13)","decl":{"start":{"line":67,"column":72},"end":{"line":67,"column":73}},"loc":{"start":{"line":67,"column":85},"end":{"line":86,"column":1}},"line":67},"14":{"name":"(anonymous_14)","decl":{"start":{"line":89,"column":25},"end":{"line":89,"column":26}},"loc":{"start":{"line":89,"column":39},"end":{"line":111,"column":2}},"line":89},"15":{"name":"(anonymous_15)","decl":{"start":{"line":89,"column":73},"end":{"line":89,"column":74}},"loc":{"start":{"line":89,"column":86},"end":{"line":111,"column":1}},"line":89}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":70,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":74,"column":9}},{"start":{"line":70,"column":8},"end":{"line":74,"column":9}}],"line":70},"9":{"loc":{"start":{"line":70,"column":12},"end":{"line":70,"column":58}},"type":"binary-expr","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":27}},{"start":{"line":70,"column":31},"end":{"line":70,"column":58}}],"line":70},"10":{"loc":{"start":{"line":93,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":97,"column":9}},{"start":{"line":93,"column":8},"end":{"line":97,"column":9}}],"line":93}},"s":{"0":1,"1":7,"2":0,"3":5,"4":7,"5":7,"6":0,"7":0,"8":0,"9":0,"10":12,"11":5,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":0,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":0,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":0,"43":1,"44":0,"45":1,"46":1,"47":2,"48":2,"49":2,"50":2,"51":2,"52":1,"53":1,"54":1,"55":0,"56":1},"f":{"0":5,"1":7,"2":0,"3":5,"4":7,"5":0,"6":12,"7":2,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":2,"15":2},"b":{"0":[1,1,1],"1":[7,0],"2":[5,5],"3":[5,7],"4":[5,5],"5":[1,1,1],"6":[0,2],"7":[2,2],"8":[0,1],"9":[1,1],"10":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/subscriber/controller/subscriberController.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/subscriber/controller/subscriberController.ts"],"names":[],"mappings":"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","sourcesContent":["import express from \"express\";\nimport { createSubscribers, getAllSubscribers, deleteSubscriberById, getSubscriberById} from \"../repository/subscriberRepo\"\nimport dotenv from \"dotenv\";\nimport nodemailer from 'nodemailer';\n\ndotenv.config();\n\n//\nconst transporter = nodemailer.createTransport({\n    service: \"gmail\",\n    host: 'stmp.gmail.com',\n    port: 587,\n    secure: false, // true for 465, false for other ports\n    auth: {\n        user:'aimegetz@gmail.com',\n        pass: 'xvxh xgey wksf cmkx'\n    }\n});\n\nconst sendSubscriptionEmail = async (email: string) => {\n    try {\n        const mailOptions = {\n            from: process.env.USER,\n            to: email,\n            subject: 'Subscription Confirmation',\n            text: 'Thank you for subscribing to My Page! You have successfully subscribed to receive updates.'\n        };\n\n        await transporter.sendMail(mailOptions);\n        console.log('Subscription email sent successfully');\n    } catch (error) {\n        console.error('Error sending subscription email:', error);\n    }\n};\n\n\n\n//subscribers\nexport const createSubscriber = async (req: express.Request, res: express.Response) => {\n    try {\n        const {email} = req.body;\n        const newSubscriber = await createSubscribers({email});\n        // Send subscription confirmation email\n        await sendSubscriptionEmail(email);\n\n        return res.status(200).json({\n            message: \"Subscription Sent\",\n            data: newSubscriber\n        });\n    } catch (error: any) {\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error.message             \n        })\n    }\n}\n\n\n//view subscribers\nexport const viewSubscribers = async (req: express.Request, res: express.Response) => {\n    try {\n        const allSubscribers = await getAllSubscribers();\n        if(! allSubscribers || allSubscribers.length === 0){\n            return res.status(404).json({\n                message: \"Subscribers were not found\"\n            })\n        }\n        return res.status(200).json({\n            message: \"All subscribers were successfully found\",\n            data: allSubscribers\n        })\n    }\n    catch(error: any){\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error.message             \n        })\n    }\n}\n\n//delete subscriber\nexport const deleteSubscriber = async (req: express.Request, res: express.Response) => {\n    try {\n        const subscriberId = req.params.id;\n        const existingSubscriber = await getSubscriberById(subscriberId);\n        if (!existingSubscriber) {\n            return res.status(404).json({\n                message: \"Subscriber not found\"\n            });\n        }\n        // Delete the subscriber\n        const deletedsub = await deleteSubscriberById(subscriberId);\n        return res.status(200).json({\n            message: \"Subscriber deleted successfully\",\n            data: deletedsub\n        });\n    } \n    catch (error: any) {\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error.message\n        });\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a676ac16537fdbdcf68265a298f30a3b315d80c"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/subscriber/repository/subscriberRepo.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/subscriber/repository/subscriberRepo.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":122}},"16":{"start":{"line":16,"column":22},"end":{"line":16,"column":86}},"17":{"start":{"line":17,"column":26},"end":{"line":19,"column":2}},"18":{"start":{"line":17,"column":36},"end":{"line":19,"column":2}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":52}},"20":{"start":{"line":20,"column":0},"end":{"line":20,"column":46}},"21":{"start":{"line":21,"column":26},"end":{"line":23,"column":2}},"22":{"start":{"line":21,"column":32},"end":{"line":23,"column":2}},"23":{"start":{"line":22,"column":4},"end":{"line":22,"column":46}},"24":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}},"25":{"start":{"line":25,"column":26},"end":{"line":27,"column":2}},"26":{"start":{"line":25,"column":34},"end":{"line":27,"column":2}},"27":{"start":{"line":26,"column":4},"end":{"line":26,"column":60}},"28":{"start":{"line":28,"column":0},"end":{"line":28,"column":46}},"29":{"start":{"line":29,"column":29},"end":{"line":31,"column":2}},"30":{"start":{"line":29,"column":37},"end":{"line":31,"column":2}},"31":{"start":{"line":30,"column":4},"end":{"line":30,"column":62}},"32":{"start":{"line":32,"column":0},"end":{"line":32,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":26},"end":{"line":17,"column":27}},"loc":{"start":{"line":17,"column":36},"end":{"line":19,"column":2}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":17,"column":70},"end":{"line":17,"column":71}},"loc":{"start":{"line":17,"column":83},"end":{"line":19,"column":1}},"line":17},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":26},"end":{"line":21,"column":27}},"loc":{"start":{"line":21,"column":32},"end":{"line":23,"column":2}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":21,"column":66},"end":{"line":21,"column":67}},"loc":{"start":{"line":21,"column":79},"end":{"line":23,"column":1}},"line":21},"12":{"name":"(anonymous_12)","decl":{"start":{"line":25,"column":26},"end":{"line":25,"column":27}},"loc":{"start":{"line":25,"column":34},"end":{"line":27,"column":2}},"line":25},"13":{"name":"(anonymous_13)","decl":{"start":{"line":25,"column":68},"end":{"line":25,"column":69}},"loc":{"start":{"line":25,"column":81},"end":{"line":27,"column":1}},"line":25},"14":{"name":"(anonymous_14)","decl":{"start":{"line":29,"column":29},"end":{"line":29,"column":30}},"loc":{"start":{"line":29,"column":37},"end":{"line":31,"column":2}},"line":29},"15":{"name":"(anonymous_15)","decl":{"start":{"line":29,"column":71},"end":{"line":29,"column":72}},"loc":{"start":{"line":29,"column":84},"end":{"line":31,"column":1}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":5,"2":4,"3":5,"4":5,"5":5,"6":0,"7":0,"8":0,"9":0,"10":10,"11":5,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":2,"27":2,"28":1,"29":1,"30":1,"31":1,"32":1},"f":{"0":5,"1":5,"2":4,"3":5,"4":5,"5":0,"6":10,"7":1,"8":1,"9":1,"10":1,"11":1,"12":2,"13":2,"14":1,"15":1},"b":{"0":[1,1,1],"1":[1,4],"2":[5,5],"3":[5,5],"4":[5,5],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/subscriber/repository/subscriberRepo.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/modules/subscriber/repository/subscriberRepo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,uFAA8D;AAG9D,MAAM,iBAAiB,GAAG,CAAO,IAAS,EAAE,EAAE;IAC1C,OAAO,MAAM,qBAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzC,CAAC,CAAA,CAAA;AAcQ,8CAAiB;AAZ1B,MAAM,iBAAiB,GAAG,GAAS,EAAE;IACjC,OAAO,MAAM,qBAAU,CAAC,IAAI,EAAE,CAAA;AAClC,CAAC,CAAA,CAAA;AAU2B,8CAAiB;AAR7C,MAAM,iBAAiB,GAAG,CAAO,EAAU,EAAE,EAAE;IAC3C,OAAO,MAAM,qBAAU,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;AAC/C,CAAC,CAAA,CAAA;AAMoE,8CAAiB;AAJtF,MAAM,oBAAoB,GAAG,CAAO,EAAU,EAAE,EAAE;IAC9C,OAAO,MAAM,qBAAU,CAAC,SAAS,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;AACjD,CAAC,CAAA,CAAA;AAE8C,oDAAoB","sourcesContent":["import Subscriber from \"../../../database/models/subscribers\";\n\n\nconst createSubscribers = async (body: any) => {\n    return await Subscriber.create(body);\n}\n\nconst getAllSubscribers = async () => {\n    return await Subscriber.find()\n}\n\nconst getSubscriberById = async (id: string) => {\n    return await Subscriber.findOne({_id: id});\n}\n\nconst deleteSubscriberById = async (id: string) => {\n    return await Subscriber.deleteOne({_id: id});\n}\n\nexport { createSubscribers, getAllSubscribers, deleteSubscriberById, getSubscriberById }"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d60f8b22f447989c26362908657f90e081029ed5"},"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/blogRoutes.ts":{"path":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/blogRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":78}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":60}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":41}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":92}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":53}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":63}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":62}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/blogRoutes.ts","sources":["/Users/alll/Documents/GitHub/My-Brand-Saddock-backend/src/routes/blogRoutes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA6B;AAC7B,+EAA6G;AAC7G,6DAAoC;AAEpC,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,gBAAM,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,4BAAW,CAAC,CAAC;AAEjE,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,0BAAS,CAAC,CAAC;AAEpC,MAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE,6BAAY,CAAC,CAAC;AAE9C,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,2BAAU,CAAC,CAAC;AAG7C,kBAAe,MAAM,CAAC","sourcesContent":["import express from 'express'\nimport { createBlogs, viewBlogs, viewBlogById, deleteBlog } from '../modules/blogs/controller/blogController'\nimport upload from '../utils/multer'\n\nconst router = express.Router();\n\nrouter.post(\"/createBlogs\", upload.single('image'), createBlogs);\n\nrouter.get(\"/viewBlogs\", viewBlogs);\n\nrouter.get(\"/viewBlogById/:id\", viewBlogById);\n\nrouter.delete(\"/deleteBlog/:id\", deleteBlog);\n\n\nexport default router;\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"23213d0b382d817d77d46675c0639acb4281a7f4"}}